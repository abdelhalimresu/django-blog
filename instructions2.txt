1.Create two models

Profile Model:

class Profile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    bio = models.TextField(max_length=500, blank=True)
    location = models.CharField(max_length=30, blank=True)
    birth_date = models.DateField(null=True, blank=True)

Posts Model:

class Post(models.Model):
    author = models.ForeignKey(Profile, on_delete=models.CASCADE)
    title = models.CharField(max_length=200)
    text = models.TextField()
    created_date = models.DateTimeField(auto_now_add=True)
    published_date = models.DateTimeField(auto_now=True)

2.Create views

def index(request):
    return render(request, 'index.html')

Post View:

def post_new(request):
    if request.method == "POST":
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.author = request.user.profile
            post.save()
            return redirect('post_detail', pk=post.pk)
    else:
        form = PostForm()
    return render(request, 'blog/post_edit.html', {'form': form})

def post_new(request):
    if request.method == "POST":
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.author = request.user.profile
            post.save()
            return redirect(view_posts)
    else:
        form = PostForm()
    return render(request, 'post_edit.html', {'form': form})

View Posts View:

def view_posts(request):
    posts = Post.objects.order_by('-created_date')
    query = request.GET.get('q')
    if query:
        posts = posts.filter(
            Q(title__icontains=query) |
            Q(text__icontains=query)
        ).distinct()
    context = {
        'posts': posts
    }
    return render(request, 'view_posts.html', context)

3.Create templates

index.html

<html>
    <head>
        <title>Blog</title>
    </head>
    <body>
        <h1>Welcome to the blog!</h1>
        <p>View all posts <a href="/posts">here</a>.</p>
    </body>
</html>

view_posts.html

<html>
    <head>
        <title>Posts</title>
    </head>
    <form action="/posts/" method="GET">
        <input type="text" name="q" />
        <input type="submit" value="Search" />
    </form>
    <body>
        <h1>Posts</h1>
        {% for post in posts %}
            <h2>{{ post.author.user }}</h2>
            <p>{{ post.created_date }} in {{ post.author.location }}</p>
            <h2>{{ post.title }}</h2>
            <p>{{ post.text }}</p>
            <br>
        {% endfor %}
    </body>
</html>

post_edit.html

<html>
    <head>
        <title>Create a New Post</title>
    </head>
    <body>
        <h1>Create a New Post</h1>
        <form action="" method="post">
            {% csrf_token %}
            {{ form.as_p }}
            <input type="submit" value="Create" />
        </form>
    </body>
</html>

4.Create the form

class PostForm(forms.ModelForm):
    class Meta:
        model = Post
        fields = ('title', 'text')